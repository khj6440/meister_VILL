<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMember">

	<select id="memberLogin" parameterType="Map"  resultType="adminMember">
		select 
			member_no as memberNo,
  			member_email as memberEmail,
  			member_pw as memberPw,
  			member_name as memberName,
  			member_hbd as memberHbd,
  			member_nickname as memberNickname,
  			member_phone as memberPhone,
  			member_img as memberImg,
  			member_bank as memberBank,
  			member_account as memberAccount,
  			member_time as memberTime,
  			member_level as memberLevel,
  			member_status as memberStatus,
  			member_intro as memberIntro,
  			member_field as memberField,
  			member_skill as memberSkill,
  			member_school as memberSchool,
  			member_major as memberMajor,
  			member_grade as memberGrade,
  			member_date as memberDate
  			from member where member_email = #{memberEmail} and member_pw = #{memberPw} and member_level=2
	</select>


	<select id="noticeOneView" parameterType="_int" resultType="notice">
				        select
        notice_no as noticeNo,
            notice_title as noticeTitle,
            notice_writer as noticeWriter,
            notice_content as noticeContent,
            notice_date as noticeDate,
            notice_view_count as noticeViewCount
            from notice where notice_no = #{noticeNo}
	</select>

	<select id="selectList" parameterType="Map"  resultType="adminMember">
		select *
		 from(select rownum as rnum, n.* from
		(select 
			member_no as memberNo,
  			member_email as memberEmail,
  			member_pw as memberPw,
  			member_name as memberName,
  			member_hbd as memberHbd,
  			member_nickname as memberNickname,
  			member_phone as memberPhone,
  			member_img as memberImg,
  			member_bank as memberBank,
  			member_account as memberAccount,
  			member_time as memberTime,
  			member_level as memberLevel,
  			member_status as memberStatus,
  			member_intro as memberIntro,
  			member_field as memberField,
  			member_skill as memberSkill,
  			member_school as memberSchool,
  			member_major as memberMajor,
  			member_grade as memberGrade,
  			member_date as memberDate
		from member where member_status=2 or member_status = 0 order by member_no desc)n)
		where rnum between #{start} and #{end}
	
	</select>
	
	
	
	
	<select id="adminMainEmployList" resultType="memberJoinEmploy">
			                       select
            member_no as memberNo,
  			member_email as memberEmail,
  			member_pw as memberPw,
  			member_name as memberName,
  			member_hbd as memberHbd,
  			member_nickname as memberNickname,
  			member_phone as memberPhone,
  			member_img as memberImg,
  			member_bank as memberBank,
  			member_account as memberAccount,
  			member_time as memberTime,
  			member_level as memberLevel,
  			member_status as memberStatus,
  			member_intro as memberIntro,
  			member_field as memberField,
  			member_skill as memberSkill,
  			member_school as memberSchool,
  			member_major as memberMajor,
  			member_grade as memberGrade,
  			member_date as memberDate,
            employ_no as employNo,
            employ_title as employTitle,
            employ_category1 as employCategory1,
            employ_category2 as employCategory2,
            employ_content as employContent,
            employ_skill as employSkill,
            employ_price as employPrice,
            employ_enroll_date as employEnrollDate,
            employ_start_date as employStartDate,
            employ_period as employPeriod,
            employ_board_end as employBoradEnd,
            employ_appro as employAppro,
            employ_status as employStatus,
            employ_writer as employWriter,
            project_members as projectMembers,
            project_start as projectStart
  			from employ LEFT JOIN member ON (member_no = employ_no) order by employ_no desc
	</select>
	
	
	<select id="adminMainSellList" resultType="joinSellJoinOrders">
		                   select
            member_no as memberNo,
  			member_email as memberEmail,
  			member_pw as memberPw,
  			member_name as memberName,
  			member_hbd as memberHbd,
  			member_nickname as memberNickname,
  			member_phone as memberPhone,
  			member_img as memberImg,
  			member_bank as memberBank,
  			member_account as memberAccount,
  			member_time as memberTime,
  			member_level as memberLevel,
  			member_status as memberStatus,
  			member_intro as memberIntro,
  			member_field as memberField,
  			member_skill as memberSkill,
  			member_school as memberSchool,
  			member_major as memberMajor,
  			member_grade as memberGrade,
  			member_date as memberDate,
            sell_no as sellNo,
            sell_title as sellTitle,
            sell_writer as sellWriter,
            sell_price as sellPrice,
            sell_category1 as sellCategory1,
            sell_category2 as sellCategory2,
            sell_skill as sellSkill,
            sell_date as sellDate,
            sell_appro as sellAppro,
            sell_status as sellStatus,
            sell_opt1 as sellOpt1,
            sell_opt2 as sellOpt2,
            sell_opt3 as sellOpt3,
            sell_opt_fix as sellOptFix,
            sell_period as sellPeriod,
            sell_content as sellContent,
            sell_fix as sellFix,
            sell_img as sellImg
  			from sell LEFT JOIN member ON (member_no = sell_writer)
	</select>
	

	<select id="selectHaltList" parameterType="Map"  resultType="adminMember">
		select *
		 from(select rownum as rnum, n.* from
		(select 
			member_no as memberNo,
  			member_email as memberEmail,
  			member_pw as memberPw,
  			member_name as memberName,
  			member_hbd as memberHbd,
  			member_nickname as memberNickname,
  			member_phone as memberPhone,
  			member_img as memberImg,
  			member_bank as memberBank,
  			member_account as memberAccount,
  			member_time as memberTime,
  			member_level as memberLevel,
  			member_status as memberStatus,
  			member_intro as memberIntro,
  			member_field as memberField,
  			member_skill as memberSkill,
  			member_school as memberSchool,
  			member_major as memberMajor,
  			member_grade as memberGrade,
  			member_date as memberDate
		from member where member_status=2 order by member_no desc)n)
		where rnum between #{start} and #{end}
	</select>
	
	<select id="selectDeletionList" parameterType="Map"  resultType="adminMember">
		select *
		 from(select rownum as rnum, n.* from
		(select 
			member_no as memberNo,
  			member_email as memberEmail,
  			member_pw as memberPw,
  			member_name as memberName,
  			member_hbd as memberHbd,
  			member_nickname as memberNickname,
  			member_phone as memberPhone,
  			member_img as memberImg,
  			member_bank as memberBank,
  			member_account as memberAccount,
  			member_time as memberTime,
  			member_level as memberLevel,
  			member_status as memberStatus,
  			member_intro as memberIntro,
  			member_field as memberField,
  			member_skill as memberSkill,
  			member_school as memberSchool,
  			member_major as memberMajor,
  			member_grade as memberGrade,
  			member_date as memberDate
		from member where member_status=1 order by member_no desc)n)
		where rnum between #{start} and #{end}
	</select>
	
	
	<select id="totalCount" resultType="_int">
		select count(*) as cnt from member where member_status = 2 or member_status = 0
	</select>
	
	<select id="totalHaltCount" resultType="_int">
		select count(*) as cnt from member where member_status = 2
	</select>
	
	<select id="totalDeletionCount" resultType="_int">
		select count(*) as cnt from member where member_status = 1
	</select>
	
	
	<select id="cnt" resultType="_int">
		select count(*) as cnt from member
	</select>
	
	<select id="level0Cnt" resultType="_int">
		 select count(*) as level0Cnt from member where member_level = 0
	</select>
	
	<select id="level1Cnt" resultType="_int">
		select count(*) as level1Cnt from member where member_level = 1
	</select>
	
	<select id="adminNoticeCnt" resultType="_int">
		 select count(*) as adminNoticeCnt from notice
	</select>
	
	<select id="level2Cnt" resultType="_int">
		select count(*) as level2Cnt from member where member_level = 2
	</select>
	
	<select id="adminQnaCnt" resultType="_int">
		select count(*) as adminQnaCnt from qna
	</select>
	
	<insert id="newQna" parameterType="Map">
		insert into qna values(qna_seq.nextval, #{qnaTitle}, #{qnaContent})
	</insert>

	<select id="sCnt" resultType="_int">
		select count(*) as sCnt from sell
	</select>
	
	<select id="rCnt" resultType="_int">
		select count(*) as rCnt from request
	</select>
	
	<select id="eCnt" resultType="_int">
		select count(*) as eCnt from employ
	</select>
	
	<select id="sellCnt" resultType="_int">
		 select count(*) as sellCnt from sell
	</select>
	
	<select id="employListFrmCnt" resultType="_int">
		 select count(*) as employListFrmCnt from employ
	</select>
	
	<select id="employApprovalCnt" resultType="_int">
		 select count(*) as employListFrmCnt from employ where employ_Appro = 0
	</select>
	
	<select id="employNoApprovalCnt" resultType="_int">
		 select count(*) as employNoApprovalCnt from employ where employ_Appro = 2
	</select>
	
	<update id="employApprovalOk" parameterType="_int">
		UPDATE employ SET employ_appro = 1 WHERE employ_no = #{employNo}
	</update>
	
	<update id="employApprovalNo" parameterType="_int">
		UPDATE employ SET employ_appro = 2 WHERE employ_no = #{employNo}
	</update>
	
	<select id="sellListCnt" resultType="_int">
		 select count(*) as sellListCnt from sell where sell_appro = 1
	</select>
	
	<select id="sellApprovalNoListFrmCnt" resultType="_int">
		 select count(*) as sellListCnt from sell where sell_appro = 2
	</select>
	
	<select id="memberOneViewSellCnt" resultType="_int">
		 select count(*) as sellListCnt from sell where sell_writer = #{memberNo}
	</select>
	
	<select id="requestApprovalNoListFrmCnt" resultType="_int">
		 select count(*) as requestListCnt from request where request_appro = 2
	</select>
	
	<select id="memberOneViewPickCnt" resultType="_int">
		 select count(*) as pickListCnt from pick where member_no = #{memberNo}
	</select>
	
	<select id="sellApprovalCnt" resultType="_int">
		select count(*) as sellApprovalCnt from sell where sell_appro = 0
	</select>

	<select id="requestApprovalCnt" resultType="_int">
		select count(*) as requestApprovalCnt from request where request_appro = 0
	</select>
	
	<select id="requestCnt" resultType="_int">
		select count(*) as requestCnt from request where request_appro = 1
	</select>
	
	<select id="employCnt" resultType="_int">
		select count(*) as employCnt from EMPLOY
	</select>
	
	
	
  	<select id="selectOneMember" parameterType="int" resultType="adminMember">
		select 
			member_no as memberNo,
  			member_email as memberEmail,
  			member_pw as memberPw,
  			member_name as memberName,
  			member_hbd as memberHbd,
  			member_nickname as memberNickname,
  			member_phone as memberPhone,
  			member_img as memberImg,
  			member_bank as memberBank,
  			member_account as memberAccount,
  			member_time as memberTime,
  			member_level as memberLevel,
  			member_status as memberStatus,
  			member_intro as memberIntro,
  			member_field as memberField,
  			member_skill as memberSkill,
  			member_school as memberSchool,
  			member_major as memberMajor,
  			member_grade as memberGrade,
  			member_date as memberDate 
  			from member where member_no = #{num}
	</select>
	
	<update id="memberHalt" parameterType="int">
		UPDATE member SET member_status = 2 WHERE member_no = #{memberNo}
	</update>
	
	<update id="viewCount" parameterType="_int">
		UPDATE notice SET notice_view_count = notice_view_count+1 WHERE notice_no = #{noticeNo}
	</update>
	
	<update id="sellHalt" parameterType="int">
		UPDATE sell SET sell_status = 1 WHERE sell_no = #{sellNo}
	</update>

	<update id="requestApproval" parameterType="int">
		UPDATE request SET request_appro = 1 WHERE request_no = #{requestNo}
	</update>
	
	<update id="requestNoApproval" parameterType="int">
		UPDATE request SET request_appro = 2 WHERE request_no = #{requestNo}
	</update>
	
	<update id="requestEnd" parameterType="int">
		UPDATE request SET request_status = 2 WHERE request_no = #{requestNo}
	</update>
	
	<update id="requestRollback" parameterType="int">
		UPDATE request SET request_status = 0 WHERE request_no = #{requestNo}
	</update>
	
	<update id="boardRollback" parameterType="int">
		UPDATE sell SET sell_status = 0 WHERE sell_no = #{sellNo}
	</update>
	
	<update id="memberRollback" parameterType="int">
		UPDATE member SET member_status = 0 WHERE member_no = #{memberNo}
	</update>
	
	<update id="memberDelete" parameterType="int">
		UPDATE member SET member_status = 1 WHERE member_no = #{memberNo}
	</update>
	
	<update id="sellDelete" parameterType="int">
		UPDATE sell SET sell_status = 2 WHERE sell_no = #{sellNo}
	</update>
	
	<update id="reviewDelete" parameterType="Map">
		 UPDATE report SET report_board_type = 2 WHERE report_no = #{reportNo}
	</update>

	<update id="reviewOk" parameterType="int">
		 UPDATE report SET report_board_type = 1 WHERE report_no = #{reportNo}
	</update>
	
	
	<delete id="reviewRealDelete" parameterType="Map">
		    delete report where report_board_no = #{reportBoardNo}
	</delete>

	<delete id="reportBoardNoDelete" parameterType="Map">
		    delete report where report_board_no = #{reportBoardNo} and report_no != #{reportNo}
	</delete>
	
	
	<update id="reviewBack" parameterType="int">
		 UPDATE report SET report_board_type = 1 WHERE report_no = #{reportNo}
	</update>
	
	<delete id="reDel" parameterType="int">
		 delete review where review_no = #{reviewNo}
	</delete>
	
	<delete id="resDel" parameterType="int">
		 delete report_save where report_save_no = #{reportSaveNo}
	</delete>


	
	<update id="approval" parameterType="int">
		UPDATE sell SET sell_appro = 1 WHERE sell_no = #{sellNo}
	</update>
	
	<update id="approvalNo" parameterType="int">
		UPDATE sell SET sell_appro = 2 WHERE sell_no = #{sellNo}
	</update>
	
	
	<select id="sellSell" resultType="sellSell">
		 select
            sell_price as sellPrice,
            option_title as optionTitle,
            option_price as optionPrice 
  			from sell LEFT JOIN orders ON (sell_no = order_board_no)
                   LEFT JOIN order_option using (order_no)
                  LEFT JOIN options using (option_no)
  			 				where order_board_type = 0 order by sell_price desc
	</select>
	
	<select id="oneMemberSellSell" resultType="sellSell">
		        select sum(sellPrice) as sellPrice, sum(optionPrice) as optionPrice, sellWriter from 
                     (select
            sell_price as sellPrice,
            option_title as optionTitle,
            option_price as optionPrice,
            sell_writer as sellWriter
  			from sell LEFT JOIN orders ON (sell_no = order_board_no)
                   LEFT JOIN order_option using (order_no)
                  LEFT JOIN options using (option_no)
  			 				where order_board_type = 0 order by sell_price desc)
                            group by sellWriter
	</select>
	
	
	
	
	<select id="requestSell" resultType="requestSell">
		select
            request_price as requestPrice
  			from request LEFT JOIN orders ON (request_no = order_board_no)
  			 				where order_board_type = 1 order by request_price desc
	</select>
	
	
	
		<select id="oneMemberRequestSell" resultType="requestSell">
		 	select sum(requestPrice) as requestPrice, requestResMembers from 
        (select
            request_price as requestPrice,
            request_writer as requestWriter,
            to_number(request_res_members) as requestResMembers,
            request_no as requestNo
  			from request LEFT JOIN orders ON (request_no = order_board_no)
            where order_board_type = 1 and request_status =2 order by request_price desc)
            group by requestResMembers    
		</select>
	
	<delete id="noticeDelete" parameterType="_int">
		delete notice where notice_no = #{noticeNo}
	</delete>
	
	<insert id="adminNoticeInsert" parameterType="Map">
		 insert into notice values(notice_seq.nextval,#{noticeTitle},#{memberNickname},#{noticeContent},sysdate,0)
	
	</insert>
	
	<select id="NoticeView" parameterType="_int" resultType="notice">
		        select
        notice_no as noticeNo,
            notice_title as noticeTitle,
            notice_writer as noticeWriter,
            notice_content as noticeContent,
            notice_date as noticeDate,
            notice_view_count as noticeViewCount
            from notice where notice_no = #{noticeNo}
	</select>
	


	<select id="reportCnt" resultType="_int">
		select count(*) as reportCnt from report where REPORT_BOARD_TYPE = 0
	</select>
	
	<select id="reportDelCnt" resultType="_int">
		select count(*) as reportCnt from report where REPORT_BOARD_TYPE = 2
	</select>
	
	<insert id="reportReviewSave" parameterType="Map">
		insert into report_save values(REPORT_SAVE_SEQ.NEXTVAL, #{reportNo}, #{sellNo}, #{reviewContent})
	</insert>

	<update id="reviewSaveBack" parameterType="Map">
		 update review set review_content=#{reviewSaveContent} where review_no = #{reviewNo} and sell_no = #{sellNo}
	</update>
	
	<update id="reviewDel" parameterType="Map">
		  update review set review_content='신고로 인해 차단된 후기입니다.' where review_content = #{reviewContent} and review_no = #{reviewNo}
	</update>
	
	<select id="reportIf" resultType="reportSave">
		   select report_save_no as reportSaveNo,
            report_no_s as reportNoS,
            sell_no_s as sellNoS,
            review_save_content as reviewSaveContent
            from report_save
	</select>

</mapper>